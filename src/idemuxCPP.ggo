

# Name of your program
package "idemuxCPP" # don't use package if you're using automake

purpose "Demultiplex RNA-seq reads from fastq.gz files into separate files according to their indices."

#usage "idemuxCPP [options]\n"
#version "1.0"   # don't use version if you're using automake


# command line options passed to gengetopt
args "--file-name=idemuxCPP_cmdl --include-getopt --default-optional --func-name=idemuxCPP_cmdline_parser --arg-struct-name=idemuxCPP_args_info"


description   "A tool to demultiplex fastq files based on Lexogen i7,i5,i1  barcodes."


# Options
section "Required arguments"

option  "r1" 1
"Fastq.gz read file 1 (or .fastq file).\n"
string
default=""

option  "r2" 2
"Fastq.gz read file 2 (required only in paired end mode).\n"
string
optional
default=""

option  "out" o
"Where to write the output files.\n"
string
required
default="./"

option  "sample-sheet" s
"Input a csv file describing sample names and barcode combinations (i7, i5 and i1 barcodes).\n"
string
required
default="sample-sheet.csv"


section "Required arguments for bam input"
option  "bam" -
"Bam file with unaligned reads (in case of paired end data, set --paired).\n"
string
default=""

option "paired" -
"If the input is paired (interleaved reads in one bam file. (r1, r2, r1, r2,...))."
flag
off


section "Optional arguments"

option "barcode-corrections" b
"Outputs a csv file that contains the number of corrected barcodes"
string
optional

option "correction-map-prefix" m
"Set the path where the correction maps are stored."
string
optional

option  "i5-rc" 5
"Should be set when the i5 barcode has been sequenced as reverse\
complement. Make sure to enter non-reverse complement\
sequences in the barcode file."
flag
off

option "auto_detect" -
"Automatically detect if barcodes are specified in FWD or REV direction.\n"
flag
off

option  "i1-start" i
"Start position of the i1 index (1-based) on read 2.\n"
int
optional
default="11"

option "i1-read" -
"Read in which the i1 index should be corrected (1 or 2).\n"
int
optional
default="2"

option  "queue-size" q
"Queue size for reads that will be processed in one block. It competes with the 'queue-buffer-gb' option.\n"
int
optional
default="4000000"

option  "reading-threads" r
"Number of threads used for reading gz files. Either 1 or 2 (one thread per input file is used).\n"
int
optional
default="2"

option  "writing-threads" w
"Number of threads used for writing gz files. Default is the number of processor cores.\n"
int
optional

option  "processing-threads" p
"Number of threads used for processing the error correction. Default is the number of processor cores.\n"
int
optional

option "demux-only" d
"Do a one on one mapping for the barcodes specified in the sample sheet. No error correction will be done. \
Barcodes that do not match are written to the undetermined reads file.\n"
flag
off

option "skip-check" -
"Skip initial compatibility check of input files.\n"
flag
off

option "restrict-barcode-length" -
"Restrict the readout i7, i5 barcode length to the maximum barcode length in the sample sheet.\n"
flag
off

option "writer-buffer-gb" -
"Restrict the buffer in total to a maximum of value in giga bytes. \
The buffer is divided among all output sample files which are specified in the SDF. \
It should be set to a very high value (a few GB or almost all main memory). It is better to set this much higher than \
the 'queue-buffer-gb' parameter, because once the reading queue is processed, it will be written \
to disk. Thus, the 'queue-buffer-gb' can be used to adjust the memory usage. \
The 'writer-buffer-gb' affects mainly the output file size. A larger writing buffer leads to smaller fastq.gz files.\n"
double
optional
default="10.0"

option "queue-buffer-gb" -
"Restrict the buffer for reads in the queue in total to a maximum of value in giga bytes. It competes with the 'queue-size' option. \
However, it is a little bit slower. \
To be sure to use just one criterion, one of them can be set to 0. The 'queue-buffer-gb' threshold works only with 'reading-threads'=1. \
The 'queue-buffer-gb' parameter mainly reduces the overall memory usage. However, the real memory usage may be a little bit more.\n"
double
optional
default="0.0"

option  "verbose" v
"Verbose.\n"
flag
off






